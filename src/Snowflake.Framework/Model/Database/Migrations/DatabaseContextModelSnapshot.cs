// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Snowflake.Model.Database.Models;

namespace Snowflake.Model.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Snowflake.Model.Database.Models.ConfigurationProfileModel", b =>
                {
                    b.Property<Guid>("ValueCollectionGuid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConfigurationSource");

                    b.HasKey("ValueCollectionGuid");

                    b.ToTable("ConfigurationProfiles");
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.ConfigurationValueModel", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("OptionKey")
                        .IsRequired();

                    b.Property<string>("SectionKey")
                        .IsRequired();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.Property<Guid>("ValueCollectionGuid");

                    b.HasKey("Guid");

                    b.HasIndex("ValueCollectionGuid");

                    b.ToTable("ConfigurationValues");
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.ControllerElementMappingsModel", b =>
                {
                    b.Property<string>("ControllerID");

                    b.Property<string>("DeviceID");

                    b.Property<string>("ProfileName");

                    b.HasKey("ControllerID", "DeviceID", "ProfileName");

                    b.ToTable("ControllerElementMappings");
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.GameRecordConfigurationProfileModel", b =>
                {
                    b.Property<string>("ProfileName");

                    b.Property<Guid>("GameID");

                    b.Property<string>("ConfigurationSource");

                    b.Property<Guid>("ProfileID");

                    b.HasKey("ProfileName", "GameID", "ConfigurationSource");

                    b.HasIndex("GameID");

                    b.HasIndex("ProfileID")
                        .IsUnique();

                    b.ToTable("GameRecordsConfigurationProfiles");
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.MappedControllerElementModel", b =>
                {
                    b.Property<string>("ControllerID");

                    b.Property<string>("DeviceID");

                    b.Property<string>("ProfileName");

                    b.Property<string>("LayoutElement");

                    b.Property<string>("DeviceElement")
                        .IsRequired();

                    b.HasKey("ControllerID", "DeviceID", "ProfileName", "LayoutElement");

                    b.ToTable("MappedControllerElements");
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.RecordMetadataModel", b =>
                {
                    b.Property<Guid>("RecordMetadataID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MetadataKey")
                        .IsRequired();

                    b.Property<string>("MetadataValue")
                        .IsRequired();

                    b.Property<Guid>("RecordID");

                    b.HasKey("RecordMetadataID");

                    b.HasIndex("RecordID");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.RecordModel", b =>
                {
                    b.Property<Guid>("RecordID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("RecordType")
                        .IsRequired();

                    b.HasKey("RecordID");

                    b.ToTable("Records");

                    b.HasDiscriminator<string>("Discriminator").HasValue("RecordModel");
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.FileRecordModel", b =>
                {
                    b.HasBaseType("Snowflake.Model.Database.Models.RecordModel");

                    b.Property<string>("MimeType")
                        .IsRequired();

                    b.HasDiscriminator().HasValue("FileRecordModel");
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.GameRecordModel", b =>
                {
                    b.HasBaseType("Snowflake.Model.Database.Models.RecordModel");

                    b.Property<string>("Platform")
                        .IsRequired();

                    b.HasDiscriminator().HasValue("GameRecordModel");
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.ConfigurationValueModel", b =>
                {
                    b.HasOne("Snowflake.Model.Database.Models.ConfigurationProfileModel", "Profile")
                        .WithMany("Values")
                        .HasForeignKey("ValueCollectionGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.GameRecordConfigurationProfileModel", b =>
                {
                    b.HasOne("Snowflake.Model.Database.Models.GameRecordModel", "Game")
                        .WithMany("ConfigurationProfiles")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Snowflake.Model.Database.Models.ConfigurationProfileModel", "Profile")
                        .WithOne()
                        .HasForeignKey("Snowflake.Model.Database.Models.GameRecordConfigurationProfileModel", "ProfileID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.MappedControllerElementModel", b =>
                {
                    b.HasOne("Snowflake.Model.Database.Models.ControllerElementMappingsModel", "Collection")
                        .WithMany("MappedElements")
                        .HasForeignKey("ControllerID", "DeviceID", "ProfileName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Snowflake.Model.Database.Models.RecordMetadataModel", b =>
                {
                    b.HasOne("Snowflake.Model.Database.Models.RecordModel", "Record")
                        .WithMany("Metadata")
                        .HasForeignKey("RecordID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
