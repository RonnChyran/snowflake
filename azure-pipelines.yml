# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

name: $(Date:yyyyMMdd)$(Rev:-rr)

trigger:
- master

variables:
  BUILD_NUMBER: '$(Build.BuildNumber)'
  STAGING: '$(Build.ArtifactStagingDirectory)'
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
- job: Linux
  condition: and(succeeded(), eq(variables.os, 'Linux'))
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - template: azure-setup.yml  # Template referenc
    parameters:
      os: Linux
- job: Windows
  pool:
    vmImage: 'windows-2019'
  condition: and(succeeded(), eq(variables.os, 'Windows_NT'))
  steps:
  - template: azure-setup.yml  # Template reference
    parameters:
      os: Windows_NT
  - template: azure-codecov.yml
 
  - task: PublishCodeCoverageResults@1
    condition: not(variables['build.skiptest'])
    displayName: Publish test coverage to Azure
    inputs:
      codeCoverageTool: 'cobertura' # Options: cobertura, jaCoCo
      summaryFileLocation: $(System.DefaultWorkingDirectory)/src/Snowflake.Framework.Tests/coverage.cobertura.xml

  - task: PublishBuildArtifacts@1
    condition: not(variables['build.skippack'])
    displayName: Publishing build artifacts
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'drop'

  - task: NuGetCommand@2
    displayName: 'Publish framework packages to snowflake-nightly'
    inputs:
      command: push
      nuGetFeedType: external
      publishFeedCredentials: 'snowflake-nightly'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
